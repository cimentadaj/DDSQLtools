% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GetInformation.R
\name{getRecordData}
\alias{getRecordData}
\title{Download data from UNPD portal}
\usage{
getRecordData(save = FALSE, ...)
}
\arguments{
\item{save}{Logical. Choose whether or not to save the data in an external 
\code{.Rdata} file in the working directory. Default: 
\code{FALSE};}

\item{...}{Other arguments that might define the path to data. All arguments
accept a numeric code which is interpreted as the code of the specific
product requested. Alternatively, you can supply the equivalent product
name as a string which is case insensitive (see examples). Handle with
care, this is important! The following options are available: \itemize{
  \item{\code{dataProcessIds}} -- Data process ID as defined by the UNPD. 
  Run the \code{\link{get_dataprocess}} function to see the available 
  options;
  \item{\code{startYear}} -- Start year. Default: NULL;
  \item{\code{endYear}} -- End year. Default: NULL;
  \item{\code{indicatorTypeIds}} -- Indicator type ID as defined by the UNPD. 
  Run the \code{\link{getIndicators}} function to see the available options;
  \item{\code{isComplete}} -- isComplete;
  \item{\code{locIds}} -- Location ID as defined by the UNPD. Run the
  \code{\link{getLocations}} function to see the available options;
  \item{\code{locAreaTypeIds}} -- Location area type ID as defined by the UNPD. 
  Run the \code{\link{getLocationTypes}} function to see the available 
  options;
  \item{\code{subGroupIds}} -- SubGroup ID as defined by the UNPD. Run the 
  \code{\link{getSubGroups}} function to see the available options;
  \item{\code{addDefault}} -- Logical. Default: FALSE;
  \item{\code{includeDependencies}} -- Logical. Default: FALSE;
  \item{\code{includeFormerCountries}} -- Logical. Default: FALSE.
  }}
}
\description{
Download data from UNPD portal
}
\examples{

\dontrun{
#  You can provide all strings, all codes, or a combination of both
Y <- getRecordData(dataProcessIds = "Census",
                   indicatorTypeIds = 8, # and support numeric of string names
                   locIds = "egypt", # all arguments are case insensitive
                   locAreaTypeIds = "Whole area",
                   subGroupIds = "Total or All groups",
                   isComplete = "Abridged")

head(Y)

# Same thing only with codes
X <- getRecordData(dataProcessIds = 2,   # Census
                   indicatorTypeIds = 8, # Population by age and sex - abridged 
                   locIds = 818,         # Egypt
                   locAreaTypeIds = 2,   # Whole area 
                   subGroupIds = 2,      # Total or All groups
                   isComplete = 0)       # Age Distribution: Abridged

head(X)
}

}
