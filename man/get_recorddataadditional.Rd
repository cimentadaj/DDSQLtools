% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GetInformation.R
\name{get_recorddataadditional}
\alias{get_recorddataadditional}
\title{Download structuredDataRecordsAdditional data from the UNPD portal}
\usage{
get_recorddataadditional(save_file = FALSE, verbose = TRUE, ...)
}
\arguments{
\item{save_file}{Logical. Choose whether or not to save the data in an
external \code{.Rdata} file in the working directory. Default: \code{FALSE}.}

\item{verbose}{Whether to print the translated query from strings to digits
for faster queries. By default set to TRUE.}

\item{...}{Other arguments that might define the path to data. All arguments
accept a numeric code which is interpreted as the code of the specific
product requested. Alternatively, you can supply the equivalent product
name as a string which is case insensitive (see examples). Handle with
care, this is important! For a list of all options available, see the
parameters for each endpoint at https://popdiv.dfs.un.org/Demodata/swagger/ui/index#/}
}
\description{
Download structuredDataRecordsAdditional data from the UNPD portal
}
\details{
\code{get_recorddataadditional} directly queries the endpoint
\code{structuredDataRecordsadditional}. For a list of all options available for this
endpoint, see the parameters for each endpoint at https://popdiv.dfs.un.org/Demodata/swagger/ui/index#!/StructuredData/StructuredData_GetStructuredDataRecords

\code{get_recorddataadditional} allows the user to supply string names for all
arguments that have equivalent \code{get_*} functions. For example,
\code{get_iitypes} for \code{indicatorIds}. The string used for all
of these arguments should be the one from the column \code{Name} in
the response from the \code{get_*} functions.

By default, all results exclude columns related to the uncertainty
of the values requested (StandardErrorValue, ConfidenceInterval, etc...).
By setting the argument \code{includeUncertainty = TRUE}, the uncertainty
fields will be included in the final data frame.

Once the data is read from the API, some transformations are applied:

\itemize{
\item{\code{TimeStart} and \code{TimeEnd} are returned with format \code{'DD/MM/YYYY'}}
}
}
