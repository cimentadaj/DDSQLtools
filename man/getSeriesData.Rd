% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GetInformation.R
\name{getSeriesData}
\alias{getSeriesData}
\title{Get information about available details for a given series of data}
\usage{
getSeriesData(save = FALSE, ...)
}
\arguments{
\item{save}{Logical. Choose whether or not to save the data in an external 
\code{.Rdata} file in the working directory. Default: 
\code{FALSE};}

\item{...}{Other arguments that might define the path to data. Handle with
TODOOOOOOOOOOOOOOOOOOOOOOO!!!!! Add all args here
care, this is important! The following options are available: \itemize{
  \item{\code{dataProcessIds}} -- Data process ID as defined by the UNPD. 
  Run the \code{\link{getDataProcess}} function to see the available 
  options;
  \item{\code{startYear}} -- Start year. Default: NULL;
  \item{\code{endYear}} -- End year. Default: NULL;
  \item{\code{indicatorTypeIds}} -- Indicator type ID as defined by the UNPD. 
  Run the \code{\link{getIndicators}} function to see the available options;
  \item{\code{isComplete}} -- isComplete;
  \item{\code{locIds}} -- Location ID as defined by the UNPD. Run the
  \code{\link{getLocations}} function to see the available options;
  \item{\code{locAreaTypeIds}} -- Location area type ID as defined by the UNPD. 
  Run the \code{\link{getLocationTypes}} function to see the available 
  options;
  \item{\code{subGroupIds}} -- SubGroup ID as defined by the UNPD. Run the 
  \code{\link{getSubGroups}} function to see the available options;
  \item{\code{addDefault}} -- Logical. Default: FALSE;
  \item{\code{includeDependencies}} -- Logical. Default: FALSE;
  \item{\code{includeFormerCountries}} -- Logical. Default: FALSE.
  }}
}
\description{
Get information about available details for a given series of data
}
\examples{
G <- getSeriesData(dataProcessIds = 0:15, # possible processes
                   indicatorTypeIds = 25,    # M[x]
                   locIds = 818,             # Egypt
                   locAreaTypeIds = c(2, 3, 4), # all possible types
                   subGroupIds = 2)
G
}
